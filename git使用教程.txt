git的安装和使用教程请看：
https://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000
第一步：
学习git add "文件" 和 git commit -m "提交注释"命令

第二步：
学习 git status 和 git diff 命令

第三步：
学习如何回退或到指定版本,git log , get log pretty=online , git reset --hard HEAD(回退到上一个版本),
git reset -hard commit id（到指定版本）
退出log日志查看：
长按ESC，再按两次ZZ(大写的字母z)

第四步：
理解git的修改操作，先理解工作区和暂存区，所以改变文件，需要先 git add 再 git commit
(因为只有git add的文件才会放在暂存区，git commit只会提交暂存区的文件)

第五步
学习如何撤销修改：
第一种，在git add之前撤销，用git status 查看，
(use "git checkout -- <file>..." to discard changes in working directory)
可以使用 git checkout -- license.txt 撤销本地；
第二种，在git add后撤销，用git status 查看，
(use "git reset HEAD <file>..." to unstage)
可以使用 git reset HEAD license.txt 将暂存区的撤销，再用git status查看，
(use "git checkout -- <file>..." to discard changes in working directory)
可以使用 git checkout -- license.txt 撤销本地

第六步
添加远程库
将本地项目上传到github的命令
git remote add origin https://github.com/qpvb7984/gitstart.git
git push -u origin master

第七步
创建分支 git branch <name>
查看分支 git branch 
切换分支 git checkout <name>
创建+切换分支 git checkout -b <name>
在分支中修改文件，再提交文件
合并某分支到当前分支  git merge <name>
删除分支 git branch -d <name>

第八步
处理冲突，一般先手动处理冲突，Git用<<<<<<<，=======，>>>>>>>标记出不同分支的内容。
处理后，git add <name> ,再git commit -m ""

第九步：不使用fast forward合并分支(会创建一个新的commit)，这样就可以从日志中看到分支历史
创建并切换分支：
git checkout -b dev
提交license.txt的修改：
git add license.txt
git commit -m "分支管理"
切换回master:
git checkout master
git merge --no-ff -m "merge with no-ff" dev

第十步
bug分支